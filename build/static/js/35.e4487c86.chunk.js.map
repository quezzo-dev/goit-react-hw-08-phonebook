{"version":3,"file":"static/js/35.e4487c86.chunk.js","mappings":"gNACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA4F,0BAA5F,EAA8H,4B,6BCI/G,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,cAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MACF,IAAK,QACHN,EAASM,GACT,MACF,IAAK,WACHJ,EAAYI,GACZ,MAEF,QACE,SAYN,OACE,kBAAMC,UAAWC,EAAQC,SATN,SAACL,GACpBA,EAAEM,iBACFhB,EAASiB,EAAAA,EAAAA,SAAwB,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAIZ,WACE,mBAAOK,UAAWC,EAAlB,kBAEE,kBACEX,KAAK,OACLe,YAAY,YACZC,QAAQ,yHACRC,UAAQ,EACRC,SAAUZ,EACVG,MAAOT,EACPU,UAAWC,QAGf,mBAAOD,UAAWC,EAAlB,mBAEE,kBACEX,KAAK,QACLe,YAAY,iBACZC,QAAQ,2CACRC,UAAQ,EACRC,SAAUZ,EACVG,MAAOP,EACPQ,UAAWC,QAGf,mBAAOD,UAAWC,EAAlB,sBAEE,kBACEX,KAAK,WACLmB,KAAK,WACLF,UAAQ,EACRC,SAAUZ,EACVG,MAAOL,EACPM,UAAWC,QAGf,mBAAQD,UAAWC,EAAOQ,KAAK,SAA/B,0B,iECvES,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,IAAIG,EAAY,MAAPJ,EAAc,KAAyB,qBAAXK,QAA0BL,EAAIK,OAAOC,WAAaN,EAAI,cAE3F,GAAU,MAANI,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKZ,KAAQU,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGnB,QAETa,GAAKQ,EAAKO,SAAWf,GAH4BS,GAAK,IAK5D,MAAOO,GACPN,GAAK,EACLH,EAAKS,EACL,QACA,IACOP,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBT,EAAKC,KAAM,EAAAiB,EAAA,GAA2BlB,EAAKC,IGLjF,WACb,MAAM,IAAIkB,UAAU,6IHIgF","sources":["webpack://goit-react-hw-08-phonebook/./src/view/RegisterView/RegisterView.module.css?cf6c","view/RegisterView/RegisterView.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterView_form__DkVNM\",\"label\":\"RegisterView_label__r1pms\",\"btn\":\"RegisterView_btn__264F4\",\"input\":\"RegisterView_input__HEeZN\"};","import { useState } from \"react\";\nimport s from \"./RegisterView.module.css\";\nimport authOperations from \"../../redux/auth/authOperations\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          name=\"name\"\n          placeholder=\"Test Test\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n          onChange={handleChange}\n          value={name}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Email\n        <input\n          name=\"email\"\n          placeholder=\"test@test.test\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          required\n          onChange={handleChange}\n          value={email}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Password\n        <input\n          name=\"password\"\n          type=\"password\"\n          required\n          onChange={handleChange}\n          value={password}\n          className={s.input}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Sign up\n      </button>\n    </form>\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","currentTarget","value","className","s","onSubmit","preventDefault","authOperations","placeholder","pattern","required","onChange","type","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}