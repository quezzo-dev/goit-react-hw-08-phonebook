{"version":3,"file":"static/js/428.e3df74bd.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts/contactsSelectors.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","view/ContactsView/ContactsView.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactList_btn__6Piat\",\"listItem\":\"ContactList_listItem__SptUx\",\"list\":\"ContactList_list__csErn\"};","export const getContactsFromState = (state) => state.contacts.entities;\nexport const getFilterFromState = (state) => state.filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport s from \"./ContactList.module.css\";\nimport {\n  getContacts,\n  removeContact,\n} from \"../../redux/contacts/contactsOperations\";\nimport {\n  getContactsFromState,\n  getFilterFromState,\n} from \"../../redux/contacts/contactsSelectors\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getContactsFromState);\n  const filter = useSelector(getFilterFromState);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  function getVisibleContacts() {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts &&\n        visibleContacts.map(({ name, number, id }) => (\n          <li className={s.listItem} key={id}>\n            {`${name}: ${number}`}\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => dispatch(removeContact(id))}\n            >\n              Remove\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label\":\"Form_label__8nx+5\",\"btn\":\"Form_btn__0ebGo\",\"input\":\"Form_input__FTtTw\",\"inputTwo\":\"Form_inputTwo__3aUjo\"};","import { useState } from \"react\";\nimport s from \"./Form.module.css\";\nimport { addContact } from \"../../redux/contacts/contactsOperations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContactsFromState } from \"../../redux/contacts/contactsSelectors\";\n\nexport default function Form() {\n  const contacts = useSelector(getContactsFromState);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let duplicate = contacts.find((contact) => contact.name === name);\n    if (duplicate) {\n      alert(\"Такой контакт уже существует\");\n      setName(\"\");\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setNumber(\"\");\n    setName(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Test Test\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"+38(0XX)-XXX-XX-XX\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n          className={s.input}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   return { contacts: state.contacts };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     addContact: (name, number) => dispatch(addContact(name, number)),\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Form);\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport s from \"./Filter.module.css\";\nimport { filter } from \"../../redux/filter/filter-actions\";\n\nexport default function Filter() {\n  const value = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Filter\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter some letters to search\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={(e) => dispatch(filter(e.currentTarget.value))}\n      ></input>\n    </label>\n  );\n}\n","import ContactList from \"../../components/ContactList/ContactList\";\nimport Form from \"../../components/Form/Form\";\nimport Filter from \"../../components/Filter/Filter\";\n\nexport default function ContactsView() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["getContactsFromState","state","contacts","entities","getFilterFromState","filter","ContactList","useSelector","dispatch","useDispatch","useEffect","getContacts","visibleContacts","normalizedFilter","toLowerCase","contact","name","includes","getVisibleContacts","className","s","map","number","id","type","onClick","removeContact","Form","useState","setName","setNumber","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","alert","addContact","placeholder","pattern","title","required","onChange","Filter","ContactsView","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}